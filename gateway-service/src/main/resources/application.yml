server:
  port: 8111

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: passengerService
          uri: lb://PASSENGER-SERVICE
          predicates:
            - Path=/api/v1/passenger/**

        - id: driverService
          uri: lb://DRIVER-SERVICE
          predicates:
            - Path=/api/v1/driver/**

        - id: ridesService
          uri: lb://RIDES-SERVICE
          predicates:
            - Path=/api/v1/rides/**

        - id: paymentService
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/v1/payment/**

        - id: promoCodeService
          uri: lb://PROMO-CODE-SERVICE
          predicates:
            - Path=/api/v1/promo-code/**

        - id: ratingService
          uri: lb://RATING-SERVICE
          predicates:
            - Path=/api/v1/RATING/**
      default-filters:
        - TokenRelay=
        - RemoveRequestHeader=Cookie
  main:
    web-application-type:
      reactive
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: keycloak
            client-id: taxi-api-auth
            client-secret: 4IbCDaCRarqADALrDu3QH07u9kgh8NmX
            authorization-grant-type: authorization_code
#            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            scope:
              - openid
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/auth/realms/api-taxi-realm
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka
    fetch-registry: true
    register-with-eureka: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'