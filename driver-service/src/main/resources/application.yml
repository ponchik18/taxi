server:
  port: 8002
spring:
  application:
    name: driver-service
  datasource:
    password: password
    url: jdbc:postgresql://localhost:5432/driver
    username: ponchik18
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  liquibase:
    enabled: true
    change-log: classpath:db/main-change-log.yml
  kafka:
    consumer:
      topic: change-driver-status
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      group-id: change-driver-status-listener
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring:
          json:
            trusted:
              packages: "com.modsen.dto.driver"
  integration:
    kafka:
      bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      sent-topic: save-ride
      accepted-topic: create-ride
      group_id: drive-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka
    fetch-registry: true
    register-with-eureka: true

resilience4j.circuit-breaker:
  instances:
    myProjectAllRemoteCallsCB:
      registerHealthIndicator: true
      slidingWindowSize: 10
      slidingWindowType: COUNT_BASED
      permittedNumberOfCallsInHalfOpenState: 4
      minimumNumberOfCalls: 10
      waitDurationInOpenState: 5s
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 10
      failureRateThreshold: 50

management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'